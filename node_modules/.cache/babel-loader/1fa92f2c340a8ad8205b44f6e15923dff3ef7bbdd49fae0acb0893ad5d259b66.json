{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makha\\\\OneDrive\\\\Documents\\\\React projects\\\\Portfolio\\\\frontend-backend\\\\netflix-app-mern\\\\admin2\\\\src\\\\pages\\\\home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { ArrowDownward, ArrowUpward } from \"@mui/icons-material\";\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\nimport \"./home.css\";\n// import { userData } from \"../../dummyData\";\nimport WidgetSm from \"../../components/widgetSm/WidgetSm\";\nimport WidgetLg from \"../../components/widgetLg/WidgetLg\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport { getStorage, ref, listAll, getMetadata } from 'firebase/storage';\nimport app from \"../../firebase\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [totalSizeInMB, setTotalSizeInMB] = useState(null);\n  const [remainingStorageInMB, setRemainingStorageInMB] = useState(null);\n  const [remainingStorageInGB, setRemainingStorageInGB] = useState(null);\n  const [GBDownloadsLimit, setGBDownloadsLimit] = useState(1);\n  const [uploadOperations, setUploadOperations] = useState(0);\n  const [downloadOperations, setDownloadOperations] = useState(0);\n  const [fetchedData, setFetchedData] = useState(false);\n  // const projectKey = process.env.REACT_APP_PROJECT_KEY;\n\n  //getting the data Operations \n  useEffect(() => {\n    const fetchOperations = async () => {\n      try {\n        // Fetch the movie information using the movie ID\n        if (fetchedData === false) {\n          const res = await makeRequest.get(\"/dataOperations/find\"); // Call the getMovie function with the movie ID and dispatch\n          console.log(\"Data Operations fetch\", res.data);\n          setUploadOperations(uploadOperations + res.data.upload);\n          setFetchedData(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchOperations();\n  }, [fetchedData]);\n  const dataOperations = async data => {\n    const res = await makeRequest.post(\"/dataOperations\", data, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    }).catch(function (error) {\n      // add a catch method to handle the error response\n      alert(error.response.data.message); // display the custom message in an alert box\n      console.log(\"error\", error);\n    });\n    console.log(\"Uploaded DATA\", res.data);\n  };\n  const calculateTotalFileSize = async () => {\n    const storage = getStorage(app);\n    const itemsRef = ref(storage, \"/items/\");\n    try {\n      const listResult = await listAll(itemsRef);\n\n      // Recursively list all items in each prefix\n      const allItems = [...listResult.items];\n      for (const prefix of listResult.prefixes) {\n        const prefixListResult = await listAll(prefix);\n        allItems.push(...prefixListResult.items);\n        // console.log(\"first\", prefixListResult)\n      }\n\n      // Retrieve metadata for all items\n      const metadataPromises = allItems.map(item => getMetadata(item));\n      const metadataList = await Promise.all(metadataPromises);\n\n      // Calculate total size\n      const totalSize = metadataList.reduce((total, metadata) => total + metadata.size, 0);\n      return totalSize;\n    } catch (error) {\n      console.log(\"Error calculating total file size:\", error);\n      return 0;\n    }\n  };\n  const calculateTotalStorageLimit = async () => {\n    const GBStoredLimit = 5;\n    const totalStorageLimit = GBStoredLimit * 1024 * 1024 * 1024; // Convert GB to bytes\n    console.log(\"Total storage limit:\", GBStoredLimit + \" GB\");\n    return totalStorageLimit;\n  };\n\n  // Usage\n  const display = async () => {\n    try {\n      const totalSizeInBytes = await calculateTotalFileSize();\n      const totalSizeIn_MB = totalSizeInBytes / (1024 * 1024); // Convert bytes to megabytes\n      const totalSizeIn_GB = totalSizeInBytes / (1024 * 1024 * 1024); // Convert bytes to megabytes\n      const totalStorageLimit = await calculateTotalStorageLimit();\n      const remainingStorageInBytes = totalStorageLimit - totalSizeInBytes;\n      const remainingStorageIn_MB = remainingStorageInBytes / (1024 * 1024); // Convert bytes to megabytes\n      const remainingStorageIn_GB = remainingStorageInBytes / (1024 * 1024 * 1024); // Convert bytes to gigabytes\n      const fileSizePercentage = totalSizeInBytes / totalStorageLimit * 100;\n      const uploadPercentage = uploadOperations / 20000 * 100;\n      const downloadPercentage = downloadOperations / 50000 * 100;\n      const dataOperationsInput = {\n        \"fileSize\": totalSizeIn_GB.toFixed(2),\n        \"percentage\": fileSizePercentage\n      };\n      await dataOperations(dataOperationsInput);\n      console.log(\"Total file size:\", totalSizeIn_GB.toFixed(2) + \" GB\");\n      console.log(\"Total storage limit:\", (totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2) + \" GB\");\n      console.log(\"Remaining storage:\", remainingStorageIn_MB.toFixed(2) + \" MB\");\n      console.log(\"Remaining storage:\", remainingStorageIn_GB.toFixed(2) + \" GB\");\n      console.log(\"upload count:\", uploadOperations);\n      console.log(\"Remaining upload operations:\", uploadPercentage);\n      console.log(\"download count:\", downloadOperations);\n      console.log(\"Remaining download operations:\", downloadPercentage);\n      setTotalSizeInMB(totalSizeIn_MB.toFixed(2));\n      setRemainingStorageInMB(remainingStorageIn_MB);\n      setRemainingStorageInGB(remainingStorageIn_GB);\n\n      // Make the HTTP request using Axios\n\n      // Process the retrieved usage data\n    } catch (error) {\n      console.log(\"Error in display function:\", error);\n    }\n  };\n  useEffect(() => {\n    display();\n  }, [remainingStorageInMB]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(FeaturedInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featuredItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"featuredTitle\",\n        children: \"Revanue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"featuredMoneyContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"featuredMoney\",\n          children: \"$2,415\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"featuredMoneyRate\",\n          children: [\"-11.4 \", /*#__PURE__*/_jsxDEV(ArrowDownward, {\n            className: \"featuredIcon negative\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"featuredSub\",\n        children: \"Compared to last month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeWidgets\",\n      children: [/*#__PURE__*/_jsxDEV(WidgetSm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WidgetLg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"+YeXZdPTsyeSV6F0HIFyb7P5QOs=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["ArrowDownward","ArrowUpward","FeaturedInfo","WidgetSm","WidgetLg","useEffect","useMemo","useState","makeRequest","getStorage","ref","listAll","getMetadata","app","axios","jsxDEV","_jsxDEV","Home","_s","totalSizeInMB","setTotalSizeInMB","remainingStorageInMB","setRemainingStorageInMB","remainingStorageInGB","setRemainingStorageInGB","GBDownloadsLimit","setGBDownloadsLimit","uploadOperations","setUploadOperations","downloadOperations","setDownloadOperations","fetchedData","setFetchedData","fetchOperations","res","get","console","log","data","upload","error","dataOperations","post","headers","token","JSON","parse","localStorage","getItem","accessToken","catch","alert","response","message","calculateTotalFileSize","storage","itemsRef","listResult","allItems","items","prefix","prefixes","prefixListResult","push","metadataPromises","map","item","metadataList","Promise","all","totalSize","reduce","total","metadata","size","calculateTotalStorageLimit","GBStoredLimit","totalStorageLimit","display","totalSizeInBytes","totalSizeIn_MB","totalSizeIn_GB","remainingStorageInBytes","remainingStorageIn_MB","remainingStorageIn_GB","fileSizePercentage","uploadPercentage","downloadPercentage","dataOperationsInput","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/makha/OneDrive/Documents/React projects/Portfolio/frontend-backend/netflix-app-mern/admin2/src/pages/home/Home.jsx"],"sourcesContent":["import { ArrowDownward, ArrowUpward } from \"@mui/icons-material\";\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\nimport \"./home.css\";\n// import { userData } from \"../../dummyData\";\nimport WidgetSm from \"../../components/widgetSm/WidgetSm\";\nimport WidgetLg from \"../../components/widgetLg/WidgetLg\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport { getStorage, ref, listAll, getMetadata } from 'firebase/storage';\nimport app from \"../../firebase\";\nimport axios from \"axios\";\n\nexport default function Home() {\n  const [totalSizeInMB, setTotalSizeInMB] = useState(null);\n  const [remainingStorageInMB, setRemainingStorageInMB] = useState(null);\n  const [remainingStorageInGB, setRemainingStorageInGB] = useState(null);\n  const [GBDownloadsLimit, setGBDownloadsLimit] = useState(1);\n  const [uploadOperations, setUploadOperations] = useState(0);\n  const [downloadOperations, setDownloadOperations] = useState(0);\n  const [fetchedData, setFetchedData] = useState(false);\n  // const projectKey = process.env.REACT_APP_PROJECT_KEY;\n\n  //getting the data Operations \n  useEffect(() => {\n    const fetchOperations = async () => {\n      try {\n        // Fetch the movie information using the movie ID\n        if(fetchedData===false){\n          const res = await makeRequest.get(\"/dataOperations/find\"); // Call the getMovie function with the movie ID and dispatch\n          console.log(\"Data Operations fetch\",res.data);\n          setUploadOperations(uploadOperations + res.data.upload);\n          setFetchedData(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  \n    fetchOperations();\n  }, [fetchedData]);\n  \n  const dataOperations= async(data)=>{\n    const res= await makeRequest.post(\"/dataOperations\", data, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    })\n    .catch (function (error) { // add a catch method to handle the error response\n        alert(error.response.data.message); // display the custom message in an alert box\n        console.log(\"error\",error)\n    });\n    console.log(\"Uploaded DATA\", res.data);\n  }\n  \n  const calculateTotalFileSize = async () => {\n    const storage = getStorage(app);\n    const itemsRef = ref(storage, \"/items/\");\n    try {\n      const listResult = await listAll(itemsRef);\n\n      // Recursively list all items in each prefix\n      const allItems = [...listResult.items];\n      for (const prefix of listResult.prefixes) {\n        const prefixListResult = await listAll(prefix);\n        allItems.push(...prefixListResult.items);\n        // console.log(\"first\", prefixListResult)\n      }\n\n      // Retrieve metadata for all items\n      const metadataPromises = allItems.map((item) => getMetadata(item));\n      const metadataList = await Promise.all(metadataPromises);\n\n      // Calculate total size\n      const totalSize = metadataList.reduce(\n        (total, metadata) => total + metadata.size,\n        0\n      );\n\n      return totalSize;\n    } catch (error) {\n      console.log(\"Error calculating total file size:\", error);\n      return 0;\n    }\n  };\n\n  const calculateTotalStorageLimit = async () => {\n    const GBStoredLimit = 5;\n    const totalStorageLimit = GBStoredLimit * 1024 * 1024 * 1024; // Convert GB to bytes\n    console.log(\"Total storage limit:\", GBStoredLimit + \" GB\");\n    return totalStorageLimit;\n  };\n\n  // Usage\n  const display = async () => {\n    try {\n      const totalSizeInBytes = await calculateTotalFileSize();\n      \n      const totalSizeIn_MB = (totalSizeInBytes / (1024 * 1024)); // Convert bytes to megabytes\n      const totalSizeIn_GB = (totalSizeInBytes / (1024 * 1024 * 1024)); // Convert bytes to megabytes\n      const totalStorageLimit = await calculateTotalStorageLimit();\n      const remainingStorageInBytes = totalStorageLimit - totalSizeInBytes;\n      const remainingStorageIn_MB = remainingStorageInBytes / (1024 * 1024); // Convert bytes to megabytes\n      const remainingStorageIn_GB = remainingStorageInBytes / (1024 * 1024 * 1024); // Convert bytes to gigabytes\n      const fileSizePercentage = (totalSizeInBytes / totalStorageLimit) * 100;\n      const uploadPercentage= (uploadOperations/20000)*100;\n      const downloadPercentage= (downloadOperations/50000)*100;\n      const dataOperationsInput= {\n        \"fileSize\":totalSizeIn_GB.toFixed(2),\n        \"percentage\":fileSizePercentage,\n      }\n      await dataOperations(dataOperationsInput);\n\n      console.log(\"Total file size:\", totalSizeIn_GB.toFixed(2) + \" GB\");\n      console.log(\"Total storage limit:\",\n        (totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2) + \" GB\"\n      );\n      console.log(\"Remaining storage:\", remainingStorageIn_MB.toFixed(2) + \" MB\");\n      console.log(\"Remaining storage:\", remainingStorageIn_GB.toFixed(2) + \" GB\");\n      console.log(\"upload count:\",uploadOperations);\n      console.log(\"Remaining upload operations:\",uploadPercentage);\n      console.log(\"download count:\",downloadOperations);\n      console.log(\"Remaining download operations:\",downloadPercentage);\n      \n      setTotalSizeInMB(totalSizeIn_MB.toFixed(2));\n      setRemainingStorageInMB(remainingStorageIn_MB);\n      setRemainingStorageInGB(remainingStorageIn_GB);\n\n      // Make the HTTP request using Axios\n      \n      // Process the retrieved usage data\n    } catch (error) {\n      console.log(\"Error in display function:\", error);\n    }\n  }; \n\n  useEffect(() => {\n    display();\n  }, [remainingStorageInMB]);\n  \n  return (\n    <div className=\"home\">\n      <FeaturedInfo />\n      <div className=\"featuredItem\">\n        <span className=\"featuredTitle\">Revanue</span>\n        <div className=\"featuredMoneyContainer\">\n          <span className=\"featuredMoney\">$2,415</span>\n          <span className=\"featuredMoneyRate\">\n            -11.4 <ArrowDownward  className=\"featuredIcon negative\"/>\n          </span>\n        </div>\n        <span className=\"featuredSub\">Compared to last month</span>\n      </div>\n      <div className=\"homeWidgets\">\n        <WidgetSm />\n        <WidgetLg />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}