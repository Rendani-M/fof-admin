{"ast":null,"code":"import axios from \"axios\";\nimport { createMovieFailure, createMovieStart, createMovieSuccess, deleteMovieFailure, deleteMovieStart, deleteMovieSuccess, getMoviesFailure, getMoviesStart, getMoviesSuccess, updateMovieFailure, updateMovieStart, updateMovieSuccess } from \"./MovieActions\";\nimport { makeRequest } from \"../../axios\";\nexport const getMovies = async dispatch => {\n  dispatch(getMoviesStart());\n  try {\n    const res = await makeRequest.get(\"/movies\", {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(getMoviesSuccess(res.data));\n  } catch (err) {\n    dispatch(getMoviesFailure());\n  }\n};\n\n//create\nexport const createMovie = async (movie, dispatch) => {\n  dispatch(createMovieStart());\n  try {\n    const res = await makeRequest.post(\"/movies\", movie, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(createMovieSuccess(res.data));\n  } catch (err) {\n    dispatch(createMovieFailure());\n  }\n};\n//delete\nexport const updateMovie = async (id, inputs, dispatch) => {\n  dispatch(updateMovieStart());\n  try {\n    const formData = new FormData();\n    formData.append(\"title\", inputs.title);\n    formData.append(\"year\", inputs.year);\n    formData.append(\"genre\", inputs.genre);\n    formData.append(\"limit\", inputs.limit);\n    formData.append(\"trailer\", inputs.trailer);\n    formData.append(\"video\", inputs.video);\n    formData.append(\"img\", inputs.img);\n    const movie = await makeRequest.put(\"/movies/\" + id, formData, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(updateMovieSuccess(movie.data));\n  } catch (err) {\n    dispatch(updateMovieFailure());\n  }\n};\n\n//delete\nexport const deleteMovie = async (id, dispatch) => {\n  dispatch(deleteMovieStart());\n  try {\n    await makeRequest.delete(\"/movies/\" + id, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(deleteMovieSuccess(id));\n  } catch (err) {\n    dispatch(deleteMovieFailure());\n  }\n};","map":{"version":3,"names":["axios","createMovieFailure","createMovieStart","createMovieSuccess","deleteMovieFailure","deleteMovieStart","deleteMovieSuccess","getMoviesFailure","getMoviesStart","getMoviesSuccess","updateMovieFailure","updateMovieStart","updateMovieSuccess","makeRequest","getMovies","dispatch","res","get","headers","token","JSON","parse","localStorage","getItem","accessToken","data","err","createMovie","movie","post","updateMovie","id","inputs","formData","FormData","append","title","year","genre","limit","trailer","video","img","put","deleteMovie","delete"],"sources":["C:/Users/makha/OneDrive/Documents/React projects/Portfolio/frontend-backend/netflix-app-mern/admin2/src/context/movieContext/apiCalls.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  createMovieFailure,\n  createMovieStart,\n  createMovieSuccess,\n  deleteMovieFailure,\n  deleteMovieStart,\n  deleteMovieSuccess,\n  getMoviesFailure,\n  getMoviesStart,\n  getMoviesSuccess,\n  updateMovieFailure,\n  updateMovieStart,\n  updateMovieSuccess,\n} from \"./MovieActions\";\nimport { makeRequest } from \"../../axios\";\n\nexport const getMovies = async (dispatch) => {\n  dispatch(getMoviesStart());\n  try {\n    const res = await makeRequest.get(\"/movies\", {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    });\n    dispatch(getMoviesSuccess(res.data));\n  } catch (err) {\n    dispatch(getMoviesFailure());\n  }\n};\n\n//create\nexport const createMovie = async (movie, dispatch) => {\n  dispatch(createMovieStart());\n  try {\n    const res = await makeRequest.post(\"/movies\", movie, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    });\n    dispatch(createMovieSuccess(res.data));\n  } catch (err) {\n    dispatch(createMovieFailure());\n  }\n};\n//delete\nexport const updateMovie = async (id, inputs,dispatch) => {\n  dispatch(updateMovieStart());\n  try {\n    const formData = new FormData();\n    formData.append(\"title\", inputs.title);\n    formData.append(\"year\", inputs.year);\n    formData.append(\"genre\", inputs.genre);\n    formData.append(\"limit\", inputs.limit);\n    formData.append(\"trailer\", inputs.trailer);\n    formData.append(\"video\", inputs.video);\n    formData.append(\"img\", inputs.img);\n\n    const movie= await makeRequest.put(\"/movies/\" + id, formData,{\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    });\n    \n    dispatch(updateMovieSuccess(movie.data));\n  } catch (err) {\n    dispatch(updateMovieFailure());\n  }\n};\n\n//delete\nexport const deleteMovie = async (id, dispatch) => {\n  dispatch(deleteMovieStart());\n  try {\n    await makeRequest.delete(\"/movies/\" + id, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    });\n    dispatch(deleteMovieSuccess(id));\n  } catch (err) {\n    dispatch(deleteMovieFailure());\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}