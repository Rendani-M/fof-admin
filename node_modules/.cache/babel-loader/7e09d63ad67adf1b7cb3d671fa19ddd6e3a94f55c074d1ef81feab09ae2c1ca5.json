{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makha\\\\OneDrive\\\\Documents\\\\React projects\\\\Portfolio\\\\frontend-backend\\\\netflix-app-mern\\\\admin2\\\\src\\\\pages\\\\home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { ArrowDownward, ArrowUpward } from \"@mui/icons-material\";\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\nimport \"./home.css\";\n// import { userData } from \"../../dummyData\";\nimport WidgetSm from \"../../components/widgetSm/WidgetSm\";\nimport WidgetLg from \"../../components/widgetLg/WidgetLg\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport { getStorage, ref, listAll, getMetadata } from 'firebase/storage';\nimport app from \"../../firebase\";\nimport { Box, CircularProgress, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [totalSizeInGB, setTotalSizeInGB] = useState(null);\n  const [remainingStorageInMB, setRemainingStorageInMB] = useState(null);\n  const [remainingStorageInGB, setRemainingStorageInGB] = useState(null);\n  const [GBDownloadsLimit, setGBDownloadsLimit] = useState(1);\n  const [uploadOperations, setUploadOperations] = useState(0);\n  const [uploadOperationsPercentage, setUploadOperationsPercentage] = useState(0);\n  const [downloadOperations, setDownloadOperations] = useState(0);\n  const [fetchedData, setFetchedData] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n  // const projectKey = process.env.REACT_APP_PROJECT_KEY;\n\n  function CircularProgressWithLabel(props) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        variant: \"determinate\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          component: \"div\",\n          color: \"text.secondary\",\n          children: `${Math.round(props.value)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n  CircularProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate variant.\n     * Value between 0 and 100.\n     * @default 0\n     */\n    value: progress\n  };\n  //getting the data Operations \n  useEffect(() => {\n    const fetchOperations = async () => {\n      try {\n        // Fetch the movie information using the movie ID\n        if (fetchedData === false) {\n          const res = await makeRequest.get(\"/dataOperations/find\"); // Call the getMovie function with the movie ID and dispatch\n          console.log(\"Data Operations fetch\", res.data);\n          setUploadOperations(uploadOperations + res.data.upload);\n          setDate(res.data.date);\n          setFetchedData(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchOperations();\n  }, [fetchedData]);\n\n  // useEffect(() => {\n  //   const timer = setInterval(() => {\n  //     setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n  //   }, 800);\n\n  //   return () => {\n  //     clearInterval(timer);\n  //   };\n  // }, []);\n\n  const dataOperations = async data => {\n    const res = await makeRequest.post(\"/dataOperations\", data, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    }).catch(function (error) {\n      // add a catch method to handle the error response\n      alert(error.response.data.message); // display the custom message in an alert box\n      console.log(\"error\", error);\n    });\n    console.log(\"Uploaded DATA\", res.data);\n  };\n  const calculateTotalFileSize = async () => {\n    const storage = getStorage(app);\n    const itemsRef = ref(storage, \"/items/\");\n    try {\n      const listResult = await listAll(itemsRef);\n\n      // Recursively list all items in each prefix\n      const allItems = [...listResult.items];\n      for (const prefix of listResult.prefixes) {\n        const prefixListResult = await listAll(prefix);\n        allItems.push(...prefixListResult.items);\n        // console.log(\"first\", prefixListResult)\n      }\n\n      // Retrieve metadata for all items\n      const metadataPromises = allItems.map(item => getMetadata(item));\n      const metadataList = await Promise.all(metadataPromises);\n\n      // Calculate total size\n      const totalSize = metadataList.reduce((total, metadata) => total + metadata.size, 0);\n      return totalSize;\n    } catch (error) {\n      console.log(\"Error calculating total file size:\", error);\n      return 0;\n    }\n  };\n  const calculateTotalStorageLimit = async () => {\n    const GBStoredLimit = 5;\n    const totalStorageLimit = GBStoredLimit * 1024 * 1024 * 1024; // Convert GB to bytes\n    console.log(\"Total storage limit:\", GBStoredLimit + \" GB\");\n    return totalStorageLimit;\n  };\n\n  // Usage\n  const display = async () => {\n    try {\n      const totalSizeInBytes = await calculateTotalFileSize();\n      const totalSizeIn_MB = totalSizeInBytes / (1024 * 1024); // Convert bytes to megabytes\n      const totalSizeIn_GB = totalSizeInBytes / (1024 * 1024 * 1024); // Convert bytes to megabytes\n      const totalStorageLimit = await calculateTotalStorageLimit();\n      const remainingStorageInBytes = totalStorageLimit - totalSizeInBytes;\n      const remainingStorageIn_MB = remainingStorageInBytes / (1024 * 1024); // Convert bytes to megabytes\n      const remainingStorageIn_GB = remainingStorageInBytes / (1024 * 1024 * 1024); // Convert bytes to gigabytes\n      const fileSizePercentage = totalSizeInBytes / totalStorageLimit * 100;\n      const uploadPercentage = uploadOperations / 20000 * 100;\n      const downloadPercentage = downloadOperations / 50000 * 100;\n      const dataOperationsInput = {\n        \"fileSize\": totalSizeIn_GB.toFixed(2),\n        \"percentage\": fileSizePercentage\n      };\n      await dataOperations(dataOperationsInput);\n      uploadOperations ? setUploadOperationsPercentage(uploadPercentage) : setUploadOperationsPercentage(0);\n      console.log(\"Total file size:\", totalSizeIn_GB.toFixed(2) + \" GB\");\n      console.log(\"Total storage limit:\", (totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2) + \" GB\");\n      console.log(\"Remaining storage:\", remainingStorageIn_MB.toFixed(2) + \" MB\");\n      console.log(\"Remaining storage:\", remainingStorageIn_GB.toFixed(2) + \" GB\");\n      console.log(\"upload count:\", uploadOperations);\n      console.log(\"Remaining upload operations:\", uploadOperationsPercentage);\n      console.log(\"download count:\", downloadOperations);\n      console.log(\"Remaining download operations:\", downloadPercentage);\n      downloadOperations ? setGBDownloadsLimit(downloadOperations) : setGBDownloadsLimit(0);\n      downloadPercentage ? setDownloadOperations(downloadPercentage) : setDownloadOperations(0);\n      setTotalSizeInGB(totalSizeIn_GB.toFixed(2));\n      setRemainingStorageInMB(remainingStorageIn_MB);\n      setRemainingStorageInGB(remainingStorageIn_GB);\n      setProgress(totalSizeIn_GB.toFixed(2) / (totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2) * 100);\n      // Make the HTTP request using Axios\n\n      // Process the retrieved usage data\n    } catch (error) {\n      console.log(\"Error in display function:\", error);\n    }\n  };\n  useEffect(() => {\n    display();\n  }, [remainingStorageInMB]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FeaturedInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FeaturedInfo, {\n        progress: GBDownloadsLimit,\n        title: 'GB download',\n        date: date,\n        data: downloadOperations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeaturedInfo, {\n        progress: uploadOperationsPercentage,\n        title: 'Upload Count',\n        date: date,\n        data: uploadOperations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeaturedInfo, {\n        progress: downloadOperations,\n        title: 'Download Count',\n        date: date,\n        data: downloadOperations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featuredItem2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"featuredTitle2\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featuredMoneyContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"featuredMoney2\",\n            children: \"Current file size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"featuredSub2\",\n          children: [\"Amount: \", totalSizeInGB, \" GB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right2\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n          value: progress,\n          style: {\n            transform: 'scale(5)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeWidgets\",\n      children: [/*#__PURE__*/_jsxDEV(WidgetSm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WidgetLg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"iDiCgPPKQLtGpErsrg6dHD7dMck=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["ArrowDownward","ArrowUpward","FeaturedInfo","WidgetSm","WidgetLg","useEffect","useMemo","useState","makeRequest","getStorage","ref","listAll","getMetadata","app","Box","CircularProgress","Typography","jsxDEV","_jsxDEV","Home","_s","totalSizeInGB","setTotalSizeInGB","remainingStorageInMB","setRemainingStorageInMB","remainingStorageInGB","setRemainingStorageInGB","GBDownloadsLimit","setGBDownloadsLimit","uploadOperations","setUploadOperations","uploadOperationsPercentage","setUploadOperationsPercentage","downloadOperations","setDownloadOperations","fetchedData","setFetchedData","progress","setProgress","date","setDate","Date","toISOString","split","CircularProgressWithLabel","props","sx","position","display","alignItems","justifyContent","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","top","left","bottom","right","component","color","Math","round","value","propTypes","fetchOperations","res","get","console","log","data","upload","error","dataOperations","post","headers","token","JSON","parse","localStorage","getItem","accessToken","catch","alert","response","message","calculateTotalFileSize","storage","itemsRef","listResult","allItems","items","prefix","prefixes","prefixListResult","push","metadataPromises","map","item","metadataList","Promise","all","totalSize","reduce","total","metadata","size","calculateTotalStorageLimit","GBStoredLimit","totalStorageLimit","totalSizeInBytes","totalSizeIn_MB","totalSizeIn_GB","remainingStorageInBytes","remainingStorageIn_MB","remainingStorageIn_GB","fileSizePercentage","uploadPercentage","downloadPercentage","dataOperationsInput","toFixed","className","title","style","transform","_c","$RefreshReg$"],"sources":["C:/Users/makha/OneDrive/Documents/React projects/Portfolio/frontend-backend/netflix-app-mern/admin2/src/pages/home/Home.jsx"],"sourcesContent":["import { ArrowDownward, ArrowUpward } from \"@mui/icons-material\";\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\nimport \"./home.css\";\n// import { userData } from \"../../dummyData\";\nimport WidgetSm from \"../../components/widgetSm/WidgetSm\";\nimport WidgetLg from \"../../components/widgetLg/WidgetLg\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport { getStorage, ref, listAll, getMetadata } from 'firebase/storage';\nimport app from \"../../firebase\";\nimport { Box, CircularProgress, Typography} from \"@mui/material\";\n\nexport default function Home() {\n  const [totalSizeInGB, setTotalSizeInGB] = useState(null);\n  const [remainingStorageInMB, setRemainingStorageInMB] = useState(null);\n  const [remainingStorageInGB, setRemainingStorageInGB] = useState(null);\n  const [GBDownloadsLimit, setGBDownloadsLimit] = useState(1);\n  const [uploadOperations, setUploadOperations] = useState(0);\n  const [uploadOperationsPercentage, setUploadOperationsPercentage] = useState(0);\n  const [downloadOperations, setDownloadOperations] = useState(0);\n  const [fetchedData, setFetchedData] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n  // const projectKey = process.env.REACT_APP_PROJECT_KEY;\n\n  function CircularProgressWithLabel(props) {\n    return (\n      <Box sx={{ position: 'relative', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <CircularProgress variant=\"determinate\" {...props} />\n        <Box\n          sx={{\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: 'absolute',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n            {`${Math.round(props.value)}%`}\n          </Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  CircularProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate variant.\n     * Value between 0 and 100.\n     * @default 0\n     */\n    value: progress,\n  };\n  //getting the data Operations \n  useEffect(() => {\n    const fetchOperations = async () => {\n      try {\n        // Fetch the movie information using the movie ID\n        if(fetchedData===false){\n          const res = await makeRequest.get(\"/dataOperations/find\"); // Call the getMovie function with the movie ID and dispatch\n          console.log(\"Data Operations fetch\",res.data);\n          setUploadOperations(uploadOperations + res.data.upload);\n          setDate(res.data.date);\n          setFetchedData(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  \n    fetchOperations();\n  }, [fetchedData]);\n\n  // useEffect(() => {\n  //   const timer = setInterval(() => {\n  //     setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n  //   }, 800);\n\n  //   return () => {\n  //     clearInterval(timer);\n  //   };\n  // }, []);\n  \n  const dataOperations= async(data)=>{\n    const res= await makeRequest.post(\"/dataOperations\", data, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    })\n    .catch (function (error) { // add a catch method to handle the error response\n        alert(error.response.data.message); // display the custom message in an alert box\n        console.log(\"error\",error)\n    });\n    console.log(\"Uploaded DATA\", res.data);\n  }\n  \n  const calculateTotalFileSize = async () => {\n    const storage = getStorage(app);\n    const itemsRef = ref(storage, \"/items/\");\n    try {\n      const listResult = await listAll(itemsRef);\n\n      // Recursively list all items in each prefix\n      const allItems = [...listResult.items];\n      for (const prefix of listResult.prefixes) {\n        const prefixListResult = await listAll(prefix);\n        allItems.push(...prefixListResult.items);\n        // console.log(\"first\", prefixListResult)\n      }\n\n      // Retrieve metadata for all items\n      const metadataPromises = allItems.map((item) => getMetadata(item));\n      const metadataList = await Promise.all(metadataPromises);\n\n      // Calculate total size\n      const totalSize = metadataList.reduce(\n        (total, metadata) => total + metadata.size,\n        0\n      );\n\n      return totalSize;\n    } catch (error) {\n      console.log(\"Error calculating total file size:\", error);\n      return 0;\n    }\n  };\n\n  const calculateTotalStorageLimit = async () => {\n    const GBStoredLimit = 5;\n    const totalStorageLimit = GBStoredLimit * 1024 * 1024 * 1024; // Convert GB to bytes\n    console.log(\"Total storage limit:\", GBStoredLimit + \" GB\");\n    return totalStorageLimit;\n  };\n\n  // Usage\n  const display = async () => {\n    try {\n      const totalSizeInBytes = await calculateTotalFileSize();\n      \n      const totalSizeIn_MB = (totalSizeInBytes / (1024 * 1024)); // Convert bytes to megabytes\n      const totalSizeIn_GB = (totalSizeInBytes / (1024 * 1024 * 1024)); // Convert bytes to megabytes\n      const totalStorageLimit = await calculateTotalStorageLimit();\n      const remainingStorageInBytes = totalStorageLimit - totalSizeInBytes;\n      const remainingStorageIn_MB = remainingStorageInBytes / (1024 * 1024); // Convert bytes to megabytes\n      const remainingStorageIn_GB = remainingStorageInBytes / (1024 * 1024 * 1024); // Convert bytes to gigabytes\n      const fileSizePercentage = (totalSizeInBytes / totalStorageLimit) * 100;\n      const uploadPercentage= (uploadOperations/20000)*100;\n      const downloadPercentage= (downloadOperations/50000)*100;\n      const dataOperationsInput= {\n        \"fileSize\":totalSizeIn_GB.toFixed(2),\n        \"percentage\":fileSizePercentage,\n      }\n      await dataOperations(dataOperationsInput);\n      uploadOperations? setUploadOperationsPercentage(uploadPercentage): setUploadOperationsPercentage(0);\n      console.log(\"Total file size:\", totalSizeIn_GB.toFixed(2) + \" GB\");\n      console.log(\"Total storage limit:\",\n        (totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2) + \" GB\"\n      );\n      console.log(\"Remaining storage:\", remainingStorageIn_MB.toFixed(2) + \" MB\");\n      console.log(\"Remaining storage:\", remainingStorageIn_GB.toFixed(2) + \" GB\");\n      console.log(\"upload count:\",uploadOperations);\n      console.log(\"Remaining upload operations:\",uploadOperationsPercentage);\n      console.log(\"download count:\",downloadOperations);\n      console.log(\"Remaining download operations:\",downloadPercentage);\n\n      downloadOperations? setGBDownloadsLimit(downloadOperations): setGBDownloadsLimit(0);\n      \n      downloadPercentage? setDownloadOperations(downloadPercentage): setDownloadOperations(0);\n      \n      setTotalSizeInGB(totalSizeIn_GB.toFixed(2));\n      setRemainingStorageInMB(remainingStorageIn_MB);\n      setRemainingStorageInGB(remainingStorageIn_GB);\n      setProgress(((totalSizeIn_GB.toFixed(2)/(totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2)))*100);\n      // Make the HTTP request using Axios\n      \n      // Process the retrieved usage data\n    } catch (error) {\n      console.log(\"Error in display function:\", error);\n    }\n  }; \n\n  useEffect(() => {\n    display();\n  }, [remainingStorageInMB]);\n  \n  return (\n    <div className=\"home\">\n      <div className=\"FeaturedInfoContainer\">\n        <FeaturedInfo progress={GBDownloadsLimit} title={'GB download'} date={date} data={downloadOperations}/>\n        <FeaturedInfo progress={uploadOperationsPercentage} title={'Upload Count'} date={date} data={uploadOperations}/>\n        <FeaturedInfo progress={downloadOperations} title={'Download Count'} date={date} data={downloadOperations}/>\n      </div>\n      \n      <div className=\"featuredItem2\">\n        <div className=\"left2\">\n          <span className=\"featuredTitle2\">{date}</span>\n          <div className=\"featuredMoneyContainer\">\n            <span className=\"featuredMoney2\">Current file size</span>\n          </div>\n          <span className=\"featuredSub2\">Amount: {totalSizeInGB} GB</span>\n        </div>\n        <div className=\"right2\">\n          <CircularProgressWithLabel value={progress} style={{ transform: 'scale(5)' }}/>\n        </div>\n      </div>\n      <div className=\"homeWidgets\">\n        <WidgetSm />\n        <WidgetLg />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}