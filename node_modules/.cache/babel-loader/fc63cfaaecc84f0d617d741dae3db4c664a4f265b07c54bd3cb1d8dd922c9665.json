{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makha\\\\OneDrive\\\\Documents\\\\React projects\\\\Portfolio\\\\frontend-backend\\\\netflix-app-mern\\\\admin2\\\\src\\\\pages\\\\home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { ArrowDownward, ArrowUpward, Height } from \"@mui/icons-material\";\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\nimport \"./home.css\";\n// import { userData } from \"../../dummyData\";\nimport WidgetSm from \"../../components/widgetSm/WidgetSm\";\nimport WidgetLg from \"../../components/widgetLg/WidgetLg\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport { getStorage, ref, listAll, getMetadata } from 'firebase/storage';\nimport app from \"../../firebase\";\nimport { Box, CircularProgress, LinearProgress, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Stack, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [totalSizeInGB, setTotalSizeInGB] = useState(null);\n  const [remainingStorageInMB, setRemainingStorageInMB] = useState(null);\n  const [remainingStorageInGB, setRemainingStorageInGB] = useState(null);\n  const [GBDownloadsLimit, setGBDownloadsLimit] = useState(1);\n  const [uploadOperations, setUploadOperations] = useState(0);\n  const [uploadOperationsPercentage, setUploadOperationsPercentage] = useState(0);\n  const [downloadOperations, setDownloadOperations] = useState(0);\n  const [fetchedData, setFetchedData] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [DBprogress, setDBProgress] = useState(0);\n  const [DBkB, setDBkB] = useState(0);\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n  // const projectKey = process.env.REACT_APP_PROJECT_KEY;\n  useEffect(() => {\n    display();\n  }, [remainingStorageInMB]);\n  useEffect(() => {\n    const fetchOperations = async () => {\n      try {\n        if (fetchedData === false) {\n          const resStorageSize = await makeRequest.get(\"/dataOperations/find\");\n          const resDBSize = await makeRequest.get(\"/dataOperations/mongoDBStorageSize\");\n          console.log(\"Data Operations fetch\", resStorageSize.data);\n          console.log(\"DB fetch\", resDBSize.data);\n          //setting data operation variables\n          setUploadOperations(uploadOperations + resStorageSize.data.upload);\n          setDate(resStorageSize.data.date);\n          //setting DBstorage\n          //max storage size is 512Mb*1024= 524288KB\n          setDBProgress(resDBSize.data.storageSize / 524288 * 100);\n          setDBkB(resDBSize.data.storageSize);\n          console.log(\"DB fetch %\", resDBSize.data.storageSize / 524288 * 100);\n          setFetchedData(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchOperations();\n  }, [fetchedData]);\n  function CircularProgressWithLabel(props) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        variant: \"determinate\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          component: \"div\",\n          color: \"text.secondary\",\n          children: `${Math.round(props.value)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  CircularProgressWithLabel.propTypes = {\n    value: progress\n  };\n  function LinearProgressWithLabel(props) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        flex: '9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          mr: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 35\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: `${Math.round(props.value)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n  LinearProgressWithLabel.propTypes = {\n    value: DBprogress\n  };\n  //getting the data Operations \n\n  const dataOperations = async data => {\n    const res = await makeRequest.post(\"/dataOperations\", data, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    }).catch(function (error) {\n      // add a catch method to handle the error response\n      alert(error.response.data.message); // display the custom message in an alert box\n      console.log(\"error\", error);\n    });\n    console.log(\"Uploaded DATA\", res.data);\n  };\n  const calculateTotalFileSize = async () => {\n    const storage = getStorage(app);\n    const itemsRef = ref(storage, \"/items/\");\n    try {\n      const listResult = await listAll(itemsRef);\n\n      // Recursively list all items in each prefix\n      const allItems = [...listResult.items];\n      for (const prefix of listResult.prefixes) {\n        const prefixListResult = await listAll(prefix);\n        allItems.push(...prefixListResult.items);\n        // console.log(\"first\", prefixListResult)\n      }\n\n      // Retrieve metadata for all items\n      const metadataPromises = allItems.map(item => getMetadata(item));\n      const metadataList = await Promise.all(metadataPromises);\n\n      // Calculate total size\n      const totalSize = metadataList.reduce((total, metadata) => total + metadata.size, 0);\n      return totalSize;\n    } catch (error) {\n      console.log(\"Error calculating total file size:\", error);\n      return 0;\n    }\n  };\n  const calculateTotalStorageLimit = async () => {\n    const GBStoredLimit = 5;\n    const totalStorageLimit = GBStoredLimit * 1024 * 1024 * 1024; // Convert GB to bytes\n    console.log(\"Total storage limit:\", GBStoredLimit + \" GB\");\n    return totalStorageLimit;\n  };\n\n  // Usage\n  const display = async () => {\n    try {\n      const totalSizeInBytes = await calculateTotalFileSize();\n\n      // const totalSizeIn_MB = (totalSizeInBytes / (1024 * 1024)); // Convert bytes to megabytes\n      const totalSizeIn_GB = totalSizeInBytes / (1024 * 1024 * 1024); // Convert bytes to megabytes\n      const totalStorageLimit = await calculateTotalStorageLimit();\n      const remainingStorageInBytes = totalStorageLimit - totalSizeInBytes;\n      const remainingStorageIn_MB = remainingStorageInBytes / (1024 * 1024); // Convert bytes to megabytes\n      const remainingStorageIn_GB = remainingStorageInBytes / (1024 * 1024 * 1024); // Convert bytes to gigabytes\n      const fileSizePercentage = totalSizeInBytes / totalStorageLimit * 100;\n      const uploadPercentage = uploadOperations / 20000 * 100;\n      const downloadPercentage = downloadOperations / 50000 * 100;\n      const dataOperationsInput = {\n        \"fileSize\": totalSizeIn_GB.toFixed(2),\n        \"percentage\": fileSizePercentage\n      };\n      await dataOperations(dataOperationsInput);\n      uploadOperations ? setUploadOperationsPercentage(uploadPercentage) : setUploadOperationsPercentage(0);\n      console.log(\"Total file size:\", totalSizeIn_GB.toFixed(2) + \" GB\");\n      console.log(\"Total storage limit:\", (totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2) + \" GB\");\n      console.log(\"Remaining storage:\", remainingStorageIn_MB.toFixed(2) + \" MB\");\n      console.log(\"Remaining storage:\", remainingStorageIn_GB.toFixed(2) + \" GB\");\n      console.log(\"upload count:\", uploadOperations);\n      console.log(\"Remaining upload operations:\", uploadOperationsPercentage);\n      console.log(\"download count:\", downloadOperations);\n      console.log(\"Remaining download operations:\", downloadPercentage);\n      downloadOperations ? setGBDownloadsLimit(downloadOperations) : setGBDownloadsLimit(0);\n      downloadPercentage ? setDownloadOperations(downloadPercentage) : setDownloadOperations(0);\n      setTotalSizeInGB(totalSizeIn_GB.toFixed(2));\n      setRemainingStorageInMB(remainingStorageIn_MB);\n      setRemainingStorageInGB(remainingStorageIn_GB);\n      setProgress(totalSizeIn_GB.toFixed(2) / (totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2) * 100);\n      // Make the HTTP request using Axios\n\n      // Process the retrieved usage data\n    } catch (error) {\n      console.log(\"Error in display function:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"FeaturedInfoContainer\",\n      sx: {\n        display: 'flex',\n        flexDirection: {\n          xs: 'column',\n          sm: 'column',\n          md: 'row'\n        },\n        mt: '1em',\n        gap: {\n          xs: '1em',\n          sm: \"1em\"\n        },\n        width: {\n          xs: '70%',\n          sm: '70%',\n          md: '100%'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(FeaturedInfo, {\n        progress: GBDownloadsLimit,\n        title: 'GB download',\n        date: date,\n        data: downloadOperations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeaturedInfo, {\n        progress: uploadOperationsPercentage,\n        title: 'Upload Count',\n        date: date,\n        data: uploadOperations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeaturedInfo, {\n        progress: downloadOperations,\n        title: 'Download Count',\n        date: date,\n        data: downloadOperations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"featuredItem2\",\n      sx: {\n        width: {\n          xs: '100%',\n          sm: '80%',\n          md: '50%'\n        },\n        border: '1px solid green'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"CircularProgress\",\n        sx: {\n          display: 'flex',\n          flexDirection: 'row',\n          Height: '80%',\n          flex: '9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"featuredTitle2\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featuredMoneyContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"featuredMoney2\",\n              children: \"Current Storage size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"featuredSub2\",\n            children: [\"Amount: \", totalSizeInGB, \" GB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right2\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n            value: progress,\n            style: {\n              transform: 'scale(5)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"linearProgress\",\n        style: {\n          Height: '20%',\n          flex: '1'\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 2,\n          sx: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              flex: '1'\n            },\n            children: [\"DB Storage \", DBkB, \" kB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgressWithLabel, {\n            value: DBprogress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"homeWidgets\",\n      sx: {\n        display: 'flex',\n        flexDirection: {\n          xs: 'column',\n          sm: 'column',\n          md: 'row'\n        },\n        mt: '1em',\n        gap: {\n          xs: '1em',\n          sm: \"1em\"\n        },\n        margin: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(WidgetSm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WidgetLg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"cJpL6Jt4odJYkPIn3UuU0r8/GpM=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["ArrowDownward","ArrowUpward","Height","FeaturedInfo","WidgetSm","WidgetLg","useEffect","useMemo","useState","makeRequest","getStorage","ref","listAll","getMetadata","app","Box","CircularProgress","LinearProgress","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Stack","Typography","jsxDEV","_jsxDEV","Home","_s","totalSizeInGB","setTotalSizeInGB","remainingStorageInMB","setRemainingStorageInMB","remainingStorageInGB","setRemainingStorageInGB","GBDownloadsLimit","setGBDownloadsLimit","uploadOperations","setUploadOperations","uploadOperationsPercentage","setUploadOperationsPercentage","downloadOperations","setDownloadOperations","fetchedData","setFetchedData","progress","setProgress","DBprogress","setDBProgress","DBkB","setDBkB","date","setDate","Date","toISOString","split","display","fetchOperations","resStorageSize","get","resDBSize","console","log","data","upload","storageSize","error","CircularProgressWithLabel","props","sx","position","alignItems","justifyContent","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","top","left","bottom","right","component","color","Math","round","value","propTypes","LinearProgressWithLabel","flex","width","mr","minWidth","dataOperations","res","post","headers","token","JSON","parse","localStorage","getItem","accessToken","catch","alert","response","message","calculateTotalFileSize","storage","itemsRef","listResult","allItems","items","prefix","prefixes","prefixListResult","push","metadataPromises","map","item","metadataList","Promise","all","totalSize","reduce","total","metadata","size","calculateTotalStorageLimit","GBStoredLimit","totalStorageLimit","totalSizeInBytes","totalSizeIn_GB","remainingStorageInBytes","remainingStorageIn_MB","remainingStorageIn_GB","fileSizePercentage","uploadPercentage","downloadPercentage","dataOperationsInput","toFixed","className","flexDirection","xs","sm","md","mt","gap","title","border","style","transform","direction","spacing","margin","_c","$RefreshReg$"],"sources":["C:/Users/makha/OneDrive/Documents/React projects/Portfolio/frontend-backend/netflix-app-mern/admin2/src/pages/home/Home.jsx"],"sourcesContent":["import { ArrowDownward, ArrowUpward, Height } from \"@mui/icons-material\";\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\nimport \"./home.css\";\n// import { userData } from \"../../dummyData\";\nimport WidgetSm from \"../../components/widgetSm/WidgetSm\";\nimport WidgetLg from \"../../components/widgetLg/WidgetLg\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport { getStorage, ref, listAll, getMetadata } from 'firebase/storage';\nimport app from \"../../firebase\";\nimport { Box, CircularProgress, LinearProgress, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Stack, Typography} from \"@mui/material\";\n\nexport default function Home() {\n  const [totalSizeInGB, setTotalSizeInGB] = useState(null);\n  const [remainingStorageInMB, setRemainingStorageInMB] = useState(null);\n  const [remainingStorageInGB, setRemainingStorageInGB] = useState(null);\n  const [GBDownloadsLimit, setGBDownloadsLimit] = useState(1);\n  const [uploadOperations, setUploadOperations] = useState(0);\n  const [uploadOperationsPercentage, setUploadOperationsPercentage] = useState(0);\n  const [downloadOperations, setDownloadOperations] = useState(0);\n  const [fetchedData, setFetchedData] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [DBprogress, setDBProgress] = useState(0);\n  const [DBkB, setDBkB] = useState(0);\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n  // const projectKey = process.env.REACT_APP_PROJECT_KEY;\n  useEffect(() => {\n    display();\n  }, [remainingStorageInMB]);\n\n  useEffect(() => {\n    const fetchOperations = async () => {\n      try {\n        \n        if(fetchedData===false){\n          const resStorageSize = await makeRequest.get(\"/dataOperations/find\"); \n          const resDBSize = await makeRequest.get(\"/dataOperations/mongoDBStorageSize\"); \n\n          console.log(\"Data Operations fetch\",resStorageSize.data);\n          console.log(\"DB fetch\",resDBSize.data);\n          //setting data operation variables\n          setUploadOperations(uploadOperations + resStorageSize.data.upload);\n          setDate(resStorageSize.data.date);\n          //setting DBstorage\n          //max storage size is 512Mb*1024= 524288KB\n          setDBProgress((resDBSize.data.storageSize/524288)*100);\n          setDBkB(resDBSize.data.storageSize)\n          console.log(\"DB fetch %\",(resDBSize.data.storageSize/524288)*100);\n          setFetchedData(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  \n    fetchOperations();\n  }, [fetchedData]);  \n\n  function CircularProgressWithLabel(props) {\n    return (\n      <Box sx={{ position: 'relative', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <CircularProgress variant=\"determinate\" {...props} />\n        <Box\n          sx={{\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: 'absolute',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n            {`${Math.round(props.value)}%`}\n          </Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  CircularProgressWithLabel.propTypes = {\n    value: progress,\n  };\n\n  function LinearProgressWithLabel(props) {\n    return (\n      <Box sx={{ display: 'flex', alignItems: 'center', flex:'9' }}>\n        <Box sx={{ width: '100%', mr: 1 }}>\n          <LinearProgress variant=\"determinate\" {...props} />\n        </Box>\n        <Box sx={{ minWidth: 35 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\n            props.value,\n          )}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }\n  \n  LinearProgressWithLabel.propTypes = {\n    value: DBprogress,\n  };\n  //getting the data Operations \n  \n  const dataOperations= async(data)=>{\n    const res= await makeRequest.post(\"/dataOperations\", data, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    })\n    .catch (function (error) { // add a catch method to handle the error response\n        alert(error.response.data.message); // display the custom message in an alert box\n        console.log(\"error\",error)\n    });\n    console.log(\"Uploaded DATA\", res.data);\n  }\n  \n  const calculateTotalFileSize = async () => {\n    const storage = getStorage(app);\n    const itemsRef = ref(storage, \"/items/\");\n    try {\n      const listResult = await listAll(itemsRef);\n\n      // Recursively list all items in each prefix\n      const allItems = [...listResult.items];\n      for (const prefix of listResult.prefixes) {\n        const prefixListResult = await listAll(prefix);\n        allItems.push(...prefixListResult.items);\n        // console.log(\"first\", prefixListResult)\n      }\n\n      // Retrieve metadata for all items\n      const metadataPromises = allItems.map((item) => getMetadata(item));\n      const metadataList = await Promise.all(metadataPromises);\n\n      // Calculate total size\n      const totalSize = metadataList.reduce(\n        (total, metadata) => total + metadata.size,\n        0\n      );\n\n      return totalSize;\n    } catch (error) {\n      console.log(\"Error calculating total file size:\", error);\n      return 0;\n    }\n  };\n\n  const calculateTotalStorageLimit = async () => {\n    const GBStoredLimit = 5;\n    const totalStorageLimit = GBStoredLimit * 1024 * 1024 * 1024; // Convert GB to bytes\n    console.log(\"Total storage limit:\", GBStoredLimit + \" GB\");\n    return totalStorageLimit;\n  };\n\n  // Usage\n  const display = async () => {\n    try {\n      const totalSizeInBytes = await calculateTotalFileSize();\n      \n      // const totalSizeIn_MB = (totalSizeInBytes / (1024 * 1024)); // Convert bytes to megabytes\n      const totalSizeIn_GB = (totalSizeInBytes / (1024 * 1024 * 1024)); // Convert bytes to megabytes\n      const totalStorageLimit = await calculateTotalStorageLimit();\n      const remainingStorageInBytes = totalStorageLimit - totalSizeInBytes;\n      const remainingStorageIn_MB = remainingStorageInBytes / (1024 * 1024); // Convert bytes to megabytes\n      const remainingStorageIn_GB = remainingStorageInBytes / (1024 * 1024 * 1024); // Convert bytes to gigabytes\n      const fileSizePercentage = (totalSizeInBytes / totalStorageLimit) * 100;\n      const uploadPercentage= (uploadOperations/20000)*100;\n      const downloadPercentage= (downloadOperations/50000)*100;\n      const dataOperationsInput= {\n        \"fileSize\":totalSizeIn_GB.toFixed(2),\n        \"percentage\":fileSizePercentage,\n      }\n      await dataOperations(dataOperationsInput);\n      uploadOperations? setUploadOperationsPercentage(uploadPercentage): setUploadOperationsPercentage(0);\n      console.log(\"Total file size:\", totalSizeIn_GB.toFixed(2) + \" GB\");\n      console.log(\"Total storage limit:\",\n        (totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2) + \" GB\"\n      );\n      console.log(\"Remaining storage:\", remainingStorageIn_MB.toFixed(2) + \" MB\");\n      console.log(\"Remaining storage:\", remainingStorageIn_GB.toFixed(2) + \" GB\");\n      console.log(\"upload count:\",uploadOperations);\n      console.log(\"Remaining upload operations:\",uploadOperationsPercentage);\n      console.log(\"download count:\",downloadOperations);\n      console.log(\"Remaining download operations:\",downloadPercentage);\n\n      downloadOperations? setGBDownloadsLimit(downloadOperations): setGBDownloadsLimit(0);\n      \n      downloadPercentage? setDownloadOperations(downloadPercentage): setDownloadOperations(0);\n      \n      setTotalSizeInGB(totalSizeIn_GB.toFixed(2));\n      setRemainingStorageInMB(remainingStorageIn_MB);\n      setRemainingStorageInGB(remainingStorageIn_GB);\n      setProgress(((totalSizeIn_GB.toFixed(2)/(totalStorageLimit / (1024 * 1024 * 1024)).toFixed(2)))*100);\n      // Make the HTTP request using Axios\n      \n      // Process the retrieved usage data\n    } catch (error) {\n      console.log(\"Error in display function:\", error);\n    }\n  };\n\n  return (\n    <div className=\"home\">\n      <Box className=\"FeaturedInfoContainer\" sx={{display:'flex', flexDirection:{xs:'column', sm: 'column', md:'row'}, mt:'1em', gap:{xs:'1em', sm:\"1em\"}, width:{xs:'70%', sm:'70%', md:'100%'}}}>\n        <FeaturedInfo progress={GBDownloadsLimit} title={'GB download'} date={date} data={downloadOperations}/>\n        <FeaturedInfo progress={uploadOperationsPercentage} title={'Upload Count'} date={date} data={uploadOperations}/>\n        <FeaturedInfo progress={downloadOperations} title={'Download Count'} date={date} data={downloadOperations}/>\n      </Box>\n      \n      <Stack className=\"featuredItem2\" sx={{width:{xs:'100%', sm: '80%', md:'50%'}, border:'1px solid green'}}>\n        <Box className=\"CircularProgress\" sx={{display:'flex', flexDirection:'row', Height:'80%', flex:'9'}}>\n          <div className=\"left2\">\n            <span className=\"featuredTitle2\">{date}</span>\n            <div className=\"featuredMoneyContainer\">\n              <span className=\"featuredMoney2\">Current Storage size</span>\n            </div>\n            <span className=\"featuredSub2\">Amount: {totalSizeInGB} GB</span>\n          </div>\n          <div className=\"right2\">\n            <CircularProgressWithLabel value={progress} style={{ transform: 'scale(5)' }}/>\n\n          </div>\n        </Box>\n        \n        <Box className=\"linearProgress\" style={{ Height:'20%', flex:'1' }}>\n          <Stack direction=\"row\" spacing={2} sx={{ width:'100%' }}>\n            <span style={{ flex:'1' }}>DB Storage {DBkB} kB</span>\n            <LinearProgressWithLabel value={DBprogress} />\n          </Stack>\n          \n        </Box>\n      </Stack>\n      <Box className=\"homeWidgets\" sx={{display:'flex', flexDirection:{xs:'column', sm: 'column', md:'row'}, mt:'1em', gap:{xs:'1em', sm:\"1em\"}, margin:'20px'}}>\n        <WidgetSm />\n        <WidgetLg />\n      </Box>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}